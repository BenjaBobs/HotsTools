{"version":3,"sources":["api/state/heroes.ts","api/HotsTalents.ts","apps/overview/pages/hero-overview-page.tsx","apps/overview/pages/hero-details-page.tsx","apps/overview/overview-app.tsx","api/state/routing.tsx","apps/Apps.tsx","AppHost.tsx","serviceWorker.ts","index.tsx"],"names":["s_HeroNames","atom","key","default","s_Heroes","selector","get","a","heroNames","Promise","all","map","name","fetch","then","response","json","heroes","s_Hero","selectorFamily","find","h","shortName","GetHeroIcon","HeroOverviewPage","heroData","useRecoilValue","justify","x","to","path","pathname","replace","className","style","height","width","src","icon","HeroDetailsPage","props","hero","forms","Object","entries","abilities","form","paddingLeft","paddingRight","flex","hoverable","title","Item","Meta","color","avatar","size","description","expandedRole","tags","join","length","ab","OverviewApp","component","nestedApps","browserHistory","createBrowserHistory","HistoryRecoilSync","set","useSetRecoilState","s_location","useEffect","listen","location","action","s_urlPath","s_rawApps","searchValues","search","slice","split","paramsObject","value","current","Array","isArray","push","s_apps","__patchApps","apps","parentApp","extended","absolutePath","s_flatApps","flatMap","__flattenRoutes","appDef","s_appMatch","flatApps","console","log","app","match","matchPath","exact","strict","s_currentApp","appMatch","s_currentAppParams","params","Header","Layout","Content","AppHost","currentApp","currentAppParams","align","paddingTop","message","status","subTitle","Suspense","fallback","LoadingOutlined","React","cloneElement","Boolean","window","hostname","ReactDOM","render","StrictMode","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"6TAGaA,EAAcC,eAAK,CAC9BC,IAAK,cACLC,QAAS,CACP,UACA,SACA,cACA,MACA,SACA,WACA,UACA,SACA,SACA,UACA,QACA,aACA,aACA,SACA,OACA,UACA,UACA,YACA,UACA,SACA,SACA,MACA,MACA,UACA,QACA,OACA,UACA,UACA,QACA,WACA,SACA,QACA,UACA,WACA,QACA,UACA,UACA,WACA,YACA,WACA,WACA,SACA,OACA,SACA,cACA,YACA,QACA,SACA,QACA,YACA,WACA,WACA,SACA,MACA,WACA,UACA,QACA,UACA,OACA,SACA,UACA,QACA,WACA,SACA,SACA,SACA,SACA,YACA,QACA,WACA,SACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,QACA,UACA,QACA,SACA,YACA,MACA,OACA,SACA,QACA,UACA,YAISC,EAAWC,mBAAS,CAC/BH,IAAK,WACLI,IAAI,WAAD,4BAAE,iCAAAC,EAAA,6DAASD,EAAT,EAASA,IACNE,EAAYF,EAAIN,GADnB,SAGkBS,QAAQC,IAC3BF,EAAUG,KAAI,SAACC,GAAD,OACZC,MAAM,0DAAD,OACuDD,EADvD,UAEHE,KAFF,uCAEO,WAAOC,GAAP,SAAAR,EAAA,sEAA2BQ,EAASC,OAApC,mFAFP,2DALD,cAGGC,EAHH,yBAWIA,GAXJ,2CAAF,mDAAC,KAeOC,EAASC,yBAAe,CACnCjB,IAAK,SACLI,IAAK,SAACM,GAAD,OAAkB,YAGrB,OAFeN,EADmB,EAAVA,KACLF,GAELgB,MAAK,SAACC,GAAD,OAAOA,EAAEC,YAAcV,SCxHvC,SAASW,EAAYX,GAC1B,MACE,mEAAqEA,E,sBCM1D,SAASY,IACtB,IAAMC,EAAWC,yBAAetB,GAEhC,OACE,kBAAC,IAAD,CAAKuB,QAAQ,iBACVF,EAASd,KAAI,SAACiB,GAAD,OACZ,kBAAC,IAAD,CACE1B,IAAK0B,EAAEN,UACPO,GAAI,SAACC,GAAD,MACF,UAAGA,EAAKC,SAAR,mBAA2BH,EAAEN,WAAYU,QAAQ,KAAM,OAGzD,kBAAC,IAAD,CACEC,UAAU,oBACVC,MAAO,CAAEC,O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","file":"static/js/main.1ed4fe06.chunk.js","sourcesContent":["import { atom, selector, selectorFamily } from 'recoil';\nimport { Hero } from './hero-types';\n\nexport const s_HeroNames = atom({\n  key: 's_HeroNames',\n  default: [\n    'abathur',\n    'alarak',\n    'alexstrasza',\n    'ana',\n    'anduin',\n    'anubarak',\n    'artanis',\n    'arthas',\n    'auriel',\n    'azmodan',\n    'blaze',\n    'brightwing',\n    'thebutcher',\n    'cassia',\n    'chen',\n    'chogall',\n    'chromie',\n    'deathwing',\n    'deckard',\n    'dehaka',\n    'diablo',\n    'dva',\n    'etc',\n    'falstad',\n    'fenix',\n    'gall',\n    'garrosh',\n    'gazlowe',\n    'genji',\n    'greymane',\n    'guldan',\n    'hanzo',\n    'illidan',\n    'imperius',\n    'jaina',\n    'johanna',\n    'junkrat',\n    'kaelthas',\n    'kelthuzad',\n    'kerrigan',\n    'kharazim',\n    'leoric',\n    'lili',\n    'liming',\n    'lostvikings',\n    'ltmorales',\n    'lucio',\n    'lunara',\n    'maiev',\n    'malfurion',\n    'malganis',\n    'malthael',\n    'medivh',\n    'mei',\n    'mephisto',\n    'muradin',\n    'murky',\n    'nazeebo',\n    'nova',\n    'orphea',\n    'probius',\n    'qhira',\n    'ragnaros',\n    'raynor',\n    'rehgar',\n    'rexxar',\n    'samuro',\n    'sgthammer',\n    'sonya',\n    'stitches',\n    'stukov',\n    'sylvanas',\n    'tassadar',\n    'thrall',\n    'tracer',\n    'tychus',\n    'tyrael',\n    'tyrande',\n    'uther',\n    'valeera',\n    'valla',\n    'varian',\n    'whitemane',\n    'xul',\n    'yrel',\n    'zagara',\n    'zarya',\n    'zeratul',\n    'zuljin',\n  ],\n});\n\nexport const s_Heroes = selector({\n  key: 's_Heroes',\n  get: async ({ get }) => {\n    const heroNames = get(s_HeroNames);\n\n    const heroes = await Promise.all(\n      heroNames.map((name) =>\n        fetch(\n          `https://heroespatchnotes.github.io/heroes-talents/hero/${name}.json`\n        ).then(async (response) => (await response.json()) as Hero)\n      )\n    );\n\n    return heroes;\n  },\n});\n\nexport const s_Hero = selectorFamily({\n  key: 's_Hero',\n  get: (name: string) => ({ get }) => {\n    const heroes = get(s_Heroes);\n\n    return heroes.find((h) => h.shortName === name);\n  },\n});\n","export function GetHeroIcon(name: string) {\n  return (\n    'https://heroespatchnotes.github.io/heroes-talents/images/heroes/' + name\n  );\n}\n\nexport function GetAbilityIcon(name: string) {\n  return (\n    'https://heroespatchnotes.github.io/heroes-talents/images/talents/' + name\n  );\n}\n\nexport function GetTalentIcon(name: string) {\n  return (\n    'https://heroespatchnotes.github.io/heroes-talents/images/talents/' + name\n  );\n}\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { s_Heroes } from '../../../api/state/heroes';\nimport { Row } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { GetHeroIcon } from '../../../api/HotsTalents';\nimport Avatar from 'antd/lib/avatar/avatar';\n\nexport default function HeroOverviewPage() {\n  const heroData = useRecoilValue(s_Heroes);\n\n  return (\n    <Row justify=\"space-between\">\n      {heroData.map((x) => (\n        <Link\n          key={x.shortName}\n          to={(path) =>\n            `${path.pathname}/heroes/${x.shortName}`.replace('//', '/')\n          }\n        >\n          <Avatar\n            className=\"outline hoverable\"\n            style={{ height: 80, width: 80 }}\n            src={GetHeroIcon(x.icon)}\n          />\n        </Link>\n      ))}\n    </Row>\n  );\n}\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { s_Hero } from '../../../api/state/heroes';\nimport { Row, Card, List, Avatar, Col } from 'antd';\nimport { GetHeroIcon, GetAbilityIcon } from '../../../api/HotsTalents';\n\nexport default function HeroDetailsPage(props: { hero?: string }) {\n  const hero = useRecoilValue(s_Hero(props.hero!))!;\n  const forms = Object.entries(hero.abilities).map(([form, abilities]) => {\n    return { form, abilities };\n  });\n\n  return (\n    <Row justify=\"center\" style={{ paddingLeft: 48, paddingRight: 48 }}>\n      <Col flex={1}>\n        <Card\n          hoverable={false}\n          title={\n            <List.Item.Meta\n              style={{ color: 'white' }}\n              avatar={\n                <Avatar\n                  className=\"outline\"\n                  style={{ width: 80, height: 80 }}\n                  size=\"large\"\n                  src={GetHeroIcon(hero?.icon!)}\n                />\n              }\n              title={hero.name}\n              description={hero.expandedRole + ' | ' + hero?.tags.join(', ')}\n            />\n          }\n        >\n          <Row>\n            <Col>\n              {forms.map((form) => (\n                <>\n                  <Row>\n                    <h1>Abilities {forms.length > 1 && `(${form.form})`}</h1>\n                  </Row>\n                  <Row>\n                    <Col>\n                      {form.abilities.map((ab) => (\n                        <>\n                          <Avatar\n                            className=\"hexagon\"\n                            size=\"large\"\n                            src={GetAbilityIcon(ab.icon)}\n                          />\n                        </>\n                      ))}\n                    </Col>\n                  </Row>\n                </>\n              ))}\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { AppDefinition } from '../AppDefinition';\nimport HeroOverviewPage from './pages/hero-overview-page';\nimport HeroDetailsPage from './pages/hero-details-page';\n\nconst OverviewApp: AppDefinition = {\n  name: 'Overview',\n  path: '',\n  component: <HeroOverviewPage />,\n  nestedApps: [\n    {\n      name: 'Hero details',\n      path: 'heroes/:hero',\n      component: <HeroDetailsPage />,\n    },\n  ],\n};\n\nexport default OverviewApp;\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { useSetRecoilState, atom, selector } from 'recoil';\nimport { useEffect } from 'react';\n\nexport const browserHistory = createBrowserHistory();\n\nexport function HistoryRecoilSync() {\n  const set = useSetRecoilState(s_location);\n\n  useEffect(() => {\n    return browserHistory.listen((location, action) => {\n      // action = 'PUSH' | 'POP' | 'REPLACE';\n      set(location);\n    });\n  }, [set]);\n\n  return <></>;\n}\n\nexport const s_history = atom({\n  key: 'historyState',\n  default: browserHistory,\n});\n\nexport const s_location = atom({\n  key: 'location',\n  default: browserHistory.location,\n});\n\nexport const s_urlPath = selector({\n  key: 'urlPath',\n  get: ({ get }) => get(s_location).pathname,\n});\n\nexport const s_queryParams = selector({\n  key: 'queryParams',\n  get: ({ get }) => {\n    const searchValues = get(s_location).search.slice(1).split('&');\n\n    let paramsObject: { [key: string]: string | string[] } = {};\n\n    for (const kvp of searchValues) {\n      const [key, value] = kvp.split('=');\n\n      let current = paramsObject[key];\n      if (!current) {\n        paramsObject[key] = value;\n      } else {\n        if (Array.isArray(current)) {\n          current.push(value);\n        } else {\n          current = [current, value];\n          paramsObject[key] = current;\n        }\n      }\n    }\n\n    return paramsObject;\n  },\n});\n","import { matchPath } from 'react-router-dom';\nimport { atom, selector } from 'recoil';\n\nimport { AppDefinition, ExtendedAppDefinition } from './AppDefinition';\nimport OverviewApp from './overview/overview-app';\nimport { s_urlPath } from '../api/state/routing';\n\nconst s_rawApps = atom({\n  key: 'raw_apps',\n  default: [OverviewApp],\n});\n\nexport const s_apps = selector({\n  key: 'apps',\n  get: ({ get }) => {\n    const apps = get(s_rawApps);\n\n    return __patchApps(apps);\n\n    function __patchApps(\n      apps: AppDefinition[],\n      parentApp?: ExtendedAppDefinition\n    ): ExtendedAppDefinition[] {\n      for (const app of apps) {\n        const extended = app as ExtendedAppDefinition;\n\n        extended.absolutePath = parentApp\n          ? parentApp.absolutePath + '/' + extended.path\n          : '/HotsTools' + extended.path;\n\n        if (extended.nestedApps) {\n          __patchApps(extended.nestedApps, extended);\n        }\n      }\n\n      return apps as ExtendedAppDefinition[];\n    }\n  },\n});\n\nexport const s_flatApps = selector({\n  key: 'appsFlat',\n  get: ({ get }) => {\n    const apps = get(s_apps);\n\n    return apps.flatMap(__flattenRoutes);\n\n    function __flattenRoutes(\n      appDef: ExtendedAppDefinition\n    ): ExtendedAppDefinition[] {\n      return [appDef, ...(appDef?.nestedApps?.flatMap(__flattenRoutes) || [])];\n    }\n  },\n});\n\nexport const s_appMatch = selector({\n  key: 'appMatch',\n  get: ({ get }) => {\n    const path = get(s_urlPath);\n    const flatApps = get(s_flatApps);\n    console.log(flatApps.map((x) => x.absolutePath));\n    for (const app of flatApps) {\n      const match = matchPath(path, {\n        path: app.absolutePath,\n        exact: true,\n        strict: false,\n      });\n\n      if (match) {\n        return {\n          match,\n          app,\n        };\n      }\n    }\n\n    return {\n      match: null,\n      app: null,\n    };\n  },\n});\n\nexport const s_currentApp = selector({\n  key: 'currentApp',\n  get: ({ get }) => {\n    const appMatch = get(s_appMatch);\n\n    return appMatch?.app;\n  },\n});\n\nexport const s_currentAppParams = selector({\n  key: 'currentAppParams',\n  get: ({ get }) => {\n    const appMatch = get(s_appMatch);\n    return appMatch?.match?.params;\n  },\n});\n","import React from 'react';\nimport { Layout, Row, Col, Result } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { s_currentApp, s_currentAppParams, s_apps } from './apps/Apps';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary';\n\nconst { Header, Content } = Layout;\n\nexport default function AppHost() {\n  const apps = useRecoilValue(s_apps);\n  const currentApp = useRecoilValue(s_currentApp);\n  const currentAppParams = useRecoilValue(s_currentAppParams);\n\n  return (\n    <Layout>\n      <Header>\n        <Row align=\"middle\" justify=\"space-around\">\n          {apps.map((app) => (\n            <Link key={app.absolutePath} to={app.absolutePath}>\n              {app.name}\n            </Link>\n          ))}\n        </Row>\n      </Header>\n      <Content>\n        <Row justify=\"center\">\n          <Col\n            style={{\n              color: 'white',\n              paddingTop: 16,\n              paddingLeft: 32,\n              paddingRight: 32,\n            }}\n            flex=\"1\"\n          >\n            {!currentApp ? (\n              <Result\n                status=\"404\"\n                title=\"Not found\"\n                subTitle=\"Sorry, the page you visited does not exist.\"\n              />\n            ) : (\n              <ErrorBoundary\n                message={\n                  <Result\n                    status=\"500\"\n                    title=\"Error\"\n                    subTitle=\"Sorry, something tralala went wrong.\"\n                  />\n                }\n              >\n                <React.Suspense\n                  fallback={\n                    <Result title=\"Loading...\" icon={<LoadingOutlined />} />\n                  }\n                >\n                  {React.cloneElement(\n                    currentApp?.component as React.ReactElement,\n                    currentAppParams\n                  )}\n                </React.Suspense>\n              </ErrorBoundary>\n            )}\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppHost from './AppHost';\nimport * as serviceWorker from './serviceWorker';\nimport { RecoilRoot } from 'recoil';\nimport { Router } from 'react-router-dom';\nimport { HistoryRecoilSync, browserHistory } from './api/state/routing';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <HistoryRecoilSync />\n      <Router history={browserHistory}>\n        <AppHost />\n      </Router>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}